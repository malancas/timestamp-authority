#
# Copyright 2022 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: 3.0.1
info:
  title: Timestamp Authority
  description: Timestamp Authority provides an RFC3161 timestamp authority.
  version: 0.0.1
servers:
- url: http://timestamp.sigstore.dev/
paths:
  /api/v1/timestamp:
    post:
      tags:
      - timestamp
      summary: Generates a new timestamp response and creates a new log entry for
        the timestamp in the transparency log
      operationId: getTimestampResponse
      requestBody:
        content:
          application/timestamp-query:
            schema:
              type: string
              format: binary
          application/json:
            schema:
              $ref: '#/components/schemas/TimestampRequest'
        required: true
      responses:
        201:
          description: Returns a timestamp response
          content:
            application/timestamp-reply:
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/BadContent'
        501:
          $ref: '#/components/responses/NotImplemented'
        default:
          $ref: '#/components/responses/InternalServerError'
      x-codegen-request-body-name: request
  /api/v1/timestamp/certchain:
    get:
      tags:
      - timestamp
      summary: Retrieve the certficate chain for timestamping that can be used to
        validate trusted timestamps
      description: Returns the certficate chain for timestamping that can be used
        to validate trusted timestamps
      operationId: getTimestampCertChain
      responses:
        200:
          description: The PEM encoded cert chain
          content:
            application/pem-certificate-chain:
              schema:
                type: string
        404:
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    TimestampRequest:
      type: object
      properties:
        artifactHash:
          type: string
          format: binary
          description: "digest of the artifact to be timestamped (base64 encoded)"
          example: "MDM2NzVhYzUzZ"
        hashAlgorithm:
          type: string
          enum: ["sha256", "sha384", "sha512"]
          example: sha256
        certificiates:
          type: boolean
          description: "whether or not to include the certificate chain in the timestamp response"
        nonce:
          type: number
        tsaPolicyOID:
          type: string
          description: "dotted OID notation for the policy that the TSA should use"
          example: 1.2.3.4
  responses:
    BadContent:
      description: The content supplied to the server was invalid
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: There was an internal error in the server while processing the
        request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The content requested could not be found
      content: {}
    NotImplemented:
      description: The content requested is not implemented
      content: {}
